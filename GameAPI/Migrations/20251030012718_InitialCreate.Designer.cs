// <auto-generated />
using GameAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GameAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251030012718_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.21");

            modelBuilder.Entity("GameAPI.Models.PlayerScore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("KillCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Score")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("Wave")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Score");

                    b.HasIndex("Username");

                    b.ToTable("PlayerScores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            KillCount = 30,
                            Password = "password123",
                            Score = 1500,
                            Username = "ProGamer",
                            Wave = 15
                        },
                        new
                        {
                            Id = 2,
                            KillCount = 25,
                            Password = "sniper456",
                            Score = 1200,
                            Username = "Sniper",
                            Wave = 12
                        },
                        new
                        {
                            Id = 3,
                            KillCount = 20,
                            Password = "rush789",
                            Score = 980,
                            Username = "Rusher",
                            Wave = 10
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
